// 전역 변수
let announcements = [];
let assignments = [];
let resources = [];
let currentQuestionIndex = 0;
let score = 0;
let selectedAnswer = null;

// 퀴즈 문제 데이터
const quizQuestions = [
    {
        question: "대한민국의 수도는 어디인가요?",
        options: ["서울", "부산", "대구", "인천"],
        correct: 0
    },
    {
        question: "1년은 몇 개월인가요?",
        options: ["10개월", "11개월", "12개월", "13개월"],
        correct: 2
    },
    {
        question: "무지개는 몇 가지 색으로 이루어져 있나요?",
        options: ["5가지", "6가지", "7가지", "8가지"],
        correct: 2
    }
];

// 페이지 로드 시 초기화
document.addEventListener('DOMContentLoaded', function() {
    loadFromLocalStorage();
    updateStats();
    displayQuizQuestion();
    displayAnnouncements();
    displayAssignments();
    displayResources();
});

// 로컬 스토리지에서 데이터 불러오기
function loadFromLocalStorage() {
    const savedAnnouncements = localStorage.getItem('announcements');
    const savedAssignments = localStorage.getItem('assignments');
    const savedResources = localStorage.getItem('resources');
    
    if (savedAnnouncements) announcements = JSON.parse(savedAnnouncements);
    if (savedAssignments) assignments = JSON.parse(savedAssignments);
    if (savedResources) resources = JSON.parse(savedResources);
}

// 로컬 스토리지에 데이터 저장
function saveToLocalStorage() {
    localStorage.setItem('announcements', JSON.stringify(announcements));
    localStorage.setItem('assignments', JSON.stringify(assignments));
    localStorage.setItem('resources', JSON.stringify(resources));
}

// 통계 업데이트
function updateStats() {
    const today = new Date().toISOString().split('T')[0];
    const todayTasks = assignments.filter(a => a.dueDate === today).length;
    
    document.getElementById('todayTasks').textContent = todayTasks;
    document.getElementById('weekAssignments').textContent = assignments.length;
    document.getElementById('completedQuizzes').textContent = score;
}

**script.js (계속)**
```javascript
// 공지사항 추가
function addAnnouncement() {
    const title = document.getElementById('announcementTitle').value;
    const content = document.getElementById('announcementContent').value;
    
    if (title && content) {
        const announcement = {
            id: Date.now(),
            title: title,
            content: content,
            date: new Date().toLocaleDateString('ko-KR')
        };
        
        announcements.unshift(announcement);
        saveToLocalStorage();
        displayAnnouncements();
        
        // 폼 초기화
        document.getElementById('announcementTitle').value = '';
        document.getElementById('announcementContent').value = '';
    } else {
        alert('제목과 내용을 모두 입력해주세요.');
    }
}

// 공지사항 표시
function displayAnnouncements() {
    const list = document.getElementById('announcementsList');
    list.innerHTML = '';
    
    announcements.forEach(announcement => {
        const item = document.createElement('div');
        item.className = 'announcement-item';
        item.innerHTML = `
            <h3>${announcement.title}</h3>
            <p>${announcement.content}</p>
            <small>작성일: ${announcement.date}</small>
            <button class="delete-btn" onclick="deleteAnnouncement(${announcement.id})">삭제</button>
        `;
        list.appendChild(item);
    });
}

// 공지사항 삭제
function deleteAnnouncement(id) {
    if (confirm('정말 삭제하시겠습니까?')) {
        announcements = announcements.filter(a => a.id !== id);
        saveToLocalStorage();
        displayAnnouncements();
    }
}

// 과제 추가
function addAssignment() {
    const title = document.getElementById('assignmentTitle').value;
    const dueDate = document.getElementById('assignmentDue').value;
    const description = document.getElementById('assignmentDesc').value;
    
    if (title && dueDate && description) {
        const assignment = {
            id: Date.now(),
            title: title,
            dueDate: dueDate,
            description: description,
            addedDate: new Date().toLocaleDateString('ko-KR')
        };
        
        assignments.unshift(assignment);
        saveToLocalStorage();
        displayAssignments();
        updateStats();
        
        // 폼 초기화
        document.getElementById('assignmentTitle').value = '';
        document.getElementById('assignmentDue').value = '';
        document.getElementById('assignmentDesc').value = '';
    } else {
        alert('모든 필드를 입력해주세요.');
    }
}

// 과제 표시
function displayAssignments() {
    const list = document.getElementById('assignmentsList');
    list.innerHTML = '';
    
    assignments.forEach(assignment => {
        const item = document.createElement('div');
        item.className = 'assignment-item';
        
        // 마감일 계산
        const dueDate = new Date(assignment.dueDate);
        const today = new Date();
        const daysLeft = Math.ceil((dueDate - today) / (1000 * 60 * 60 * 24));
        let dueDateText = `마감일: ${assignment.dueDate}`;
        
        if (daysLeft < 0) {
            dueDateText += ' <span style="color: red;">(마감됨)</span>';
        } else if (daysLeft === 0) {
            dueDateText += ' <span style="color: orange;">(오늘 마감)</span>';
        } else if (daysLeft <= 3) {
            dueDateText += ` <span style="color: orange;">(${daysLeft}일 남음)</span>`;
        }
        
        item.innerHTML = `
            <h3>${assignment.title}</h3>
            <p>${assignment.description}</p>
            <p>${dueDateText}</p>
            <small>등록일: ${assignment.addedDate}</small>
            <button class="delete-btn" onclick="deleteAssignment(${assignment.id})">삭제</button>
        `;
        list.appendChild(item);
    });
}

// 과제 삭제
function deleteAssignment(id) {
    if (confirm('정말 삭제하시겠습니까?')) {
        assignments = assignments.filter(a => a.id !== id);
        saveToLocalStorage();
        displayAssignments();
        updateStats();
    }
}

// 학습자료 추가
function addResource() {
    const title = document.getElementById('resourceTitle').value;
    const link = document.getElementById('resourceLink').value;
    const type = document.getElementById('resourceType').value;
    
    if (title && link) {
        const resource = {
            id: Date.now(),
            title: title,
            link: link,
            type: type,
            addedDate: new Date().toLocaleDateString('ko-KR')
        };
        
        resources.unshift(resource);
        saveToLocalStorage();
        displayResources();
        
        // 폼 초기화
        document.getElementById('resourceTitle').value = '';
        document.getElementById('resourceLink').value = '';
    } else {
        alert('제목과 링크를 입력해주세요.');
    }
}

// 학습자료 표시
function displayResources() {
    const list = document.getElementById('resourcesList');
    list.innerHTML = '';
    
    resources.forEach(resource => {
        const item = document.createElement('div');
        item.className = 'resource-item';
        
        const typeClass = resource.type;
        const typeText = {
            'video': '동영상',
            'document': '문서',
            'website': '웹사이트'
        }[resource.type];
        
        item.innerHTML = `
            <h3>${resource.title}</h3>
            <span class="resource-type ${typeClass}">${typeText}</span>
            <p><a href="${resource.link}" target="_blank">${resource.link}</a></p>
            <small>등록일: ${resource.addedDate}</small>
            <button class="delete-btn" onclick="deleteResource(${resource.id})">삭제</button>
        `;
        list.appendChild(item);
    });
}

// 학습자료 삭제
function deleteResource(id) {
    if (confirm('정말 삭제하시겠습니까?')) {
        resources = resources.filter(r => r.id !== id);
        saveToLocalStorage();
        displayResources();
    }
}

// 퀴즈 문제 표시
function displayQuizQuestion() {
    if (currentQuestionIndex >= quizQuestions.length) {
        currentQuestionIndex = 0;
    }
    
    const question = quizQuestions[currentQuestionIndex];
    document.getElementById('questionText').textContent = question.question;
    
    const optionsContainer = document.getElementById('answerOptions');
    optionsContainer.innerHTML = '';
    
    question.options.forEach((option, index) => {
        const optionDiv = document.createElement('div');
        optionDiv.className = 'answer-option';
        optionDiv.textContent = option;
        optionDiv.onclick = () => selectAnswer(index);
        optionsContainer.appendChild(optionDiv);
    });
    
    // 피드백 초기화
    document.getElementById('feedback').textContent = '';
    document.getElementById('feedback').className = 'feedback';
    selectedAnswer = null;
}

// 답변 선택
function selectAnswer(index) {
    selectedAnswer = index;
    
    // 모든 옵션에서 selected 클래스 제거
    const options = document.querySelectorAll('.answer-option');
    options.forEach(option => option.classList.remove('selected'));
    
    // 선택한 옵션에 selected 클래스 추가
    options[index].classList.add('selected');
}

// 정답 확인
function checkAnswer() {
    if (selectedAnswer === null) {
        alert('답을 선택해주세요.');
        return;
    }
    
    const question = quizQuestions[currentQuestionIndex];
    const feedback = document.getElementById('feedback');
    
    if (selectedAnswer === question.correct) {
        feedback.textContent = '정답입니다! 🎉';
        feedback.className = 'feedback correct';
        score++;
        document.getElementById('score').textContent = score;
        updateStats();
    } else {
        feedback.textContent = '틀렸습니다. 다시 시도해보세요! 💪';
        feedback.className = 'feedback incorrect';
    }
}

// 다음 문제
function nextQuestion() {
    currentQuestionIndex++;
    if (currentQuestionIndex >= quizQuestions.length) {
        currentQuestionIndex = 0;
        alert(`모든 문제를 완료했습니다! 총 점수: ${score}점`);
    }
    displayQuizQuestion();
}

// 부드러운 스크롤
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
            target.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
            });
        }
    });
});

// 네비게이션 활성화 표시
window.addEventListener('scroll', () => {
    const sections = document.querySelectorAll('section');
    const navLinks = document.querySelectorAll('.nav-link');
    
    let current = '';
    sections.forEach(section => {
        const sectionTop = section.offsetTop;
        const sectionHeight = section.clientHeight;
        if (scrollY >= (sectionTop - 200)) {
            current = section.getAttribute('id');
        }
    });
    
    navLinks.forEach(link => {
        link.classList.remove('active');
        if (link.getAttribute('href').slice(1) === current) {
            link.classList.add('active');
        }
    });
});
```

**추가 CSS (styles.css에 추가)**
```css
/* 네비게이션 활성화 스타일 */
.nav-link.active {
    color: #3498db;
    font-weight: bold;
}

/* 링크 스타일 */
a {
    color: #3498db;
    text-decoration: none;
}

a:hover {
    text-decoration: underline;
}

/* 로딩 애니메이션 */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.announcement-item, .assignment-item, .resource-item {
    animation: fadeIn 0.5s ease-out;
}

/* 버튼 비활성화 스타일 */
button:disabled {
    background-color: #95a5a6;
    cursor: not-allowed;
}

/* 모바일 메뉴 토글 (추가 기능) */
.mobile-menu-toggle {
    display: none;
    background: none;
    border: none;
    color: white;
    font-size: 1.5rem;
    cursor: pointer;
}

@media (max-width: 768px) {
    .mobile-menu-toggle {
        display: block;
    }
    
    .nav-menu {
        position: fixed;
        left: -100%;
        top: 60px;
        flex-direction: column;
        background-color: #2c3e50;
        width: 100%;
        text-align: center;
        transition: 0.3s;
        box-shadow: 0 10px 27px rgba(0,0,0,0.05);
        padding: 2rem 0;
    }
    
    .nav-menu.active {
        left: 0;
    }
}

/* 프린트 스타일 */
@media print {
    .navbar, footer, button, .delete-btn {
        display: none;
    }
    
    .section {
        page-break-after: always;
    }
}
```

이 교육용 홈페이지는 다음과 같은 기능들을 포함하고 있습니다:

1. **공지사항 관리**: 공지사항을 추가하고 삭제할 수 있습니다.
2. **과제 관리**: 마감일이 있는 과제를 추가하고, 남은 기간을 표시합니다.
3. **간단한 퀴즈**: 객관식 문제를 풀고 점수를 확인할 수 있습니다.
4. **학습자료 관리**: 동영상, 문서, 웹사이트 링크를 분류해서 저장합니다.
5. **통계 대시보드**: 오늘의 할 일, 전체 과제 수, 퀴즈 점수를 표시합니다.
6. **로컬 스토리지**: 브라우저에 데이터를 저장해서 새로고침해도 유지됩니다.
7. **반응형 디자인**: 모바일과 데스크톱 모두에서 잘 작동합니다.

추가로 원하시는 기능이 있으면 말씀해주세요!
/* 네비게이션 활성화 스타일 */
.nav-link.active {
    color: #3498db;
    font-weight: bold;
}

/* 링크 스타일 */
a {
    color: #3498db;
    text-decoration: none;
}

a:hover {
    text-decoration: underline;
}

/* 로딩 애니메이션 */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.announcement-item, .assignment-item, .resource-item {
    animation: fadeIn 0.5s ease-out;
}

/* 버튼 비활성화 스타일 */
button:disabled {
    background-color: #95a5a6;
    cursor: not-allowed;
}

/* 모바일 메뉴 토글 (추가 기능) */
.mobile-menu-toggle {
    display: none;
    background: none;
    border: none;
    color: white;
    font-size: 1.5rem;
    cursor: pointer;
}

@media (max-width: 768px) {
    .mobile-menu-toggle {
        display: block;
    }
    
    .nav-menu {
        position: fixed;
        left: -100%;
        top: 60px;
        flex-direction: column;
        background-color: #2c3e50;
        width: 100%;
        text-align: center;
        transition: 0.3s;
        box-shadow: 0 10px 27px rgba(0,0,0,0.05);
        padding: 2rem 0;
    }
    
    .nav-menu.active {
        left: 0;
    }
}

/* 프린트 스타일 */
@media print {
    .navbar, footer, button, .delete-btn {
        display: none;
    }
    
    .section {
        page-break-after: always;
    }
}